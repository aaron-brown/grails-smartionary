buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:5.0.10"
    }
}

version "3.0.0"
group "org.grails.plugins"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
// TODO: uncomment below once this goes public
//apply plugin:"org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "org.grails.grails-doc"

// TODO: remove this once this moves to public
apply plugin: 'maven-publish'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion

    MAVEN_REPO = 'VDO_MAVEN_REPO'
    MAVEN_USERNAME = 'VDO_MAVEN_USERNAME'
    MAVEN_PASSWORD = 'VDO_MAVEN_PASSWORD'
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

sourceCompatibility = jdkCompatibility
targetCompatibility = jdkCompatibility

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    runtime "org.grails.plugins:hibernate4"
    runtime "org.hibernate:hibernate-ehcache"
    runtime "com.h2database:h2"
}

// TODO: fill the following section in once this goes public
/*
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
    portalUser = ""
    portalPassword = ""    
}
*/

// TODO: remove the following section once this goes public
publishing {
    repositories {
        maven {
            url System.getenv(MAVEN_REPO)
            credentials {
                username System.getenv(MAVEN_USERNAME)
                password System.getenv(MAVEN_PASSWORD)
            }
        }
    }
    publications {
        plugin(MavenPublication) {
            from components.java

            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }

            artifact sourcesJar
            artifact javadocJar
        }
    }
}
